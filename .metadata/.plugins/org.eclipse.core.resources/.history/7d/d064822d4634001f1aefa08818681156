<!DOCTYPE html>
<html xmlns:th="www.thymeleaf.org" lang="ko">
<head>
	<meta charset="utf-8">
	<title></title>
	<script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
	<script src="http://code.jquery.com/jquery-3.7.1.js"></script>
	<link
		  href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
	      rel="stylesheet"
	      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
	      crossorigin="anonymous" />
	<style>
		.hidden {
			display: none;
		}

		.readonly-input {
			background-color: rgb(234, 255, 255) !important;
			color: black;
		}

		input[type="text"] {
			width: calc(100%);
			padding: 5px;
			border: 1px solid #ced4da;
			border-radius: 4px;
			margin-bottom: 25px;
		}

		input[type="button"] {
			padding: 6px 36px;
			margin-left: -1px;
			border: 1px solid #ced4da;
			border-radius: 4px;
			font-size: inherit;
		}

		textarea {
			width: 100%;
			padding: 8px;
			border: 1px solid #ced4da;
			border-radius: 4px;
			resize: none;
			margin-bottom: 25px;
		}
		
		.error-message {
			color: red;
			font-size: 15px;
			margin-bottom: 25px;
		}
		
		.inline {
            display: inline;
        }
	</style>
</head>
<body>
	<header></header>
	<div class="container">
		<h3 class="inline">상품 이름</h3>
		<h5 class="inline" th:text="${loadName.itemName}"></h5>
		<h3 class="inline">주문 수량</h3>
		<h5 class="inline" th:text="${setQuantity.orderQuantity}"></h5>
		<h3 class="inline">결제 금액</h3>
		<h5 class="inline" th:text="${setTotalPrice.totalPrice}"></h5>
		
		<form action="../orderInfo" method="post" th:object="${order}" id="orderForm">
			<input type="hidden" th:value="${loadName.itemNo}" id="hiddenItemNo" name="itemNo" th:field="*{itemNo}"> 
			<input type="hidden" th:value="${setQuantity.orderQuantity}" th:field="*{orderQuantity}" id="hiddenOrderQuantity" name="orderQuantity"> 
			<input type="hidden" th:value="${setTotalPrice.totalPrice}" th:field="*{totalPrice}" id="hiddenTotalPrice" name="totalPrice"> 
			
			<label>수령하실 분 성함</label> 
			<input type="text" th:field="*{recName}" required><br> 
			<div id="recNameError" class="error-message" style="display: none;">
            올바르지 않은 형식의 이름입니다. 이름은 한글 또는 영어로만 2 ~ 15 글자 사이로 입력하세요.
        	</div>
			
			<label>수령하실 분 번호</label> 
			<input type="text" th:field="*{recPhone}" required><br> 
			<div id="recPhoneError" class="error-message" style="display: none;">
            올바르지 않은 형식입니다. 전화번호는 숫자 3자리 - 숫자 3자리 또는 4자리 - 숫자 4자리의 형식으로 입력하세요.
        	</div>
			
			<label>수령하실 분 주소</label>
			<div style="display: flex; flex-wrap: wrap;">
				<div style="flex: 1; margin-right: 10px;">
				<input type="text" id="postcode" placeholder="우편번호" th:field="*{recPostcode}" required>
				</div>
				
				<div style="flex: 1; margin-right: 10px;">
				<input type="button" onclick="Postcode()" value="우편번호 찾기">
				</div>
				
				<div style="flex: 1; margin-right: 10px;">
				<input type="text" id="address" placeholder="주소" th:field="*{recAddr}" required>
				</div>
				
				<div style="flex: 1; margin-right: 10px;">
				<input type="text" id="detailAddress" placeholder="상세주소" th:field="*{recDetailAddr}" required>
				</div>
			</div>


			<label>요청 사항</label>
			<textarea rows="5" cols="25" th:field="*{recRequest}"></textarea><br>

			<div class="mb-3">
				<label for="paymentMethod" class="form-label">결제 방식</label> 
				<select class="form-select" id="paymentMethod" th:field="*{paymentMethod}" required>
					<option value="">결제 방식을 선택하세요.</option>
					<option value="creditCard">신용 카드</option>
					<option value="bankTransfer">무통장 입금</option>
				</select>
			</div>
			
			<div id="creditCardInfo" class="payment-info hidden">
				<div class="mb-3">
					<label for="cardType" class="form-label">카드 선택</label> 
					<select class="form-select" id="cardType" th:field="*{cardType}">
						<option value="">결제에 사용할 카드를 선택하세요.</option>
						<option value="kmCard">국민카드</option>
						<option value="shCard">신한카드</option>
						<option value="ssCard">삼성카드</option>
						<option value="hdCard">현대카드</option>
					</select>
				</div>
				
				<div class="mb-3">
					<label for="installment" class="form-label">할부 선택</label> 
					<select class="form-select" id="installment" th:field="*{installment}">
						<option value="">할부 개월 수를 선택하세요.</option>
						<option value="rightNow">일시불</option>
						<option value="threeMonth">3개월(무이자)</option>
						<option value="sixMonth">6개월(부분 무이자)</option>
						<option value="nineMonth">9개월</option>
					</select>
				</div>
			</div>
			
			<div id="bankTransferInfo" class="payment-info hidden">
				<div class="mb-3">
					<label for="bankType" class="form-label">은행 선택</label> 
					<select class="form-select" id="bankType" th:field="*{bankType}">
						<option value="">무통장 입금할 은행을 선택하세요.</option>
						<option value="kmBank">국민은행</option>
						<option value="shBank">신한은행</option>
						<option value="hnBank">하나은행</option>
						<option value="wrBank">우리은행</option>
					</select>
				</div>
				
				<div class="mb-3">
					<label for="accountNumber" class="form-label">계좌 번호</label> 
					<input type="text" class="form-control readonly-input" id="accountNumber" readonly>
				</div>
			</div>
			
			<button type="submit" class="btn btn-primary">구매하기</button>
		</form>
	</div>
	<footer></footer>
	<script>
		function Postcode() {
			new daum.Postcode({
				oncomplete : function(data) {
					// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.
					
					// 각 주소의 노출 규칙에 따라 주소를 조합한다.
					
					// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
					var addr = ""; // 주소 변수

					//사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
					if (data.userSelectedType === "R") {
						// 사용자가 도로명 주소를 선택했을 경우
						addr = data.roadAddress;
					} else {
						// 사용자가 지번 주소를 선택했을 경우(J)
						addr = data.jibunAddress;
					}

					// 우편번호와 주소 정보를 해당 필드에 넣는다.
					document.getElementById("postcode").value = data.zonecode;
					document.getElementById("address").value = addr;
					
					// 커서를 상세주소 필드로 이동한다.
					document.getElementById("detailAddress").focus();
				},
			}).open();
		}

		$(document).ready(function() {
			// 이름 입력 필드 처리
            $('#recName').on('input blur', function(event) {
                var recNameValue = $(this).val().trim();
                var recNameRegex = /^[가-힣a-zA-Z]{2,15}$/;

                if (event.type === 'blur' || recNameValue === '') {
                    if (recNameValue === '') {
                        $('#recNameError').hide(); // 입력값이 없을 때 오류 메시지 숨김
                    } else if (!recNameRegex.test(recNameValue)) {
                        $('#recNameError').show(); // 오류 메시지 표시
                    } else {
                        $('#recNameError').hide(); // 유효한 입력값일 때 오류 메시지 숨김
                    }
                }
            });

            // 전화번호 입력 필드 처리
            $('#recPhone').on('input blur', function(event) {
                var recPhoneValue = $(this).val().trim();
                var recPhoneRegex = /^\d{3}-\d{3,4}-\d{4}$/;

                if (event.type === 'blur' || recPhoneValue === '') {
                    if (recPhoneValue === '') {
                        $('#recPhoneError').hide(); // 입력값이 없을 때 오류 메시지 숨김
                    } else if (!recPhoneRegex.test(recPhoneValue)) {
                        $('#recPhoneError').show(); // 오류 메시지 표시
                    } else {
                        $('#recPhoneError').hide(); // 유효한 입력값일 때 오류 메시지 숨김
                    }
                }
            });

            // 폼 제출 시 유효성 검사
            $('#orderForm').submit(function(event) {
                var recNameValue = $('#recName').val().trim();
                var recNameRegex = /^[가-힣a-zA-Z]{2,15}$/;
                var recPhoneValue = $('#recPhone').val().trim();
                var recPhoneRegex = /^\d{3}-\d{3,4}-\d{4}$/;
                var isValid = true;

                // 이름 유효성 검사
                if (!recNameRegex.test(recNameValue)) {
                    $('#recNameError').show(); // 이름 오류 메시지 표시
                    isValid = false;
                } else {
                    $('#recNameError').hide(); // 이름 오류 메시지 숨김
                }

                // 전화번호 유효성 검사
                if (!recPhoneRegex.test(recPhoneValue)) {
                    $('#recPhoneError').show(); // 전화번호 오류 메시지 표시
                    isValid = false;
                } else {
                    $('#recPhoneError').hide(); // 전화번호 오류 메시지 숨김
                }

                // 유효하지 않은 입력이 있을 경우 폼 제출 중단
                if (!isValid) {
                    event.preventDefault(); // 폼 제출을 중단
                    alert('입력된 정보가 올바르지 않습니다!'); // 추가적인 alert 표시
                }
            });
            
			// 초기 상태 설정
			$('#paymentMethod').change(function() {
				var selectedMethod = $(this).val();
				
				if (selectedMethod === 'creditCard') {
					$('#creditCardInfo').removeClass('hidden');
					$('#bankTransferInfo').addClass('hidden');
					// 신용카드 선택 시 은행 선택 필드의 required 속성 제거
					$('#bankType').removeAttr('required');
					// 신용카드 필드에 required 속성 추가
					$('#cardType').attr('required', true);
					$('#installment').attr('required', true);
				} else if (selectedMethod === 'bankTransfer') {
					$('#creditCardInfo').addClass('hidden');
					$('#bankTransferInfo').removeClass('hidden');
					// 무통장 입금 선택 시 은행 선택 필드에 required 속성 추가
					$('#bankType').attr('required', true);
					// 신용카드 필드의 required 속성 제거
					$('#cardType').removeAttr('required');
					$('#installment').removeAttr('required');
				}
			});

			// 은행 선택 시 계좌 번호 업데이트
			$('#bankType').change(function() {
				var selectedBank = $(this).val();
				var accountNumber = '';
				
				if (selectedBank === 'kmBank') {
					accountNumber = '279801-04-287617';
				} else if (selectedBank === 'shBank') {
					accountNumber = '123-456-789010';
				} else if (selectedBank === 'hnBank') {
					accountNumber = '109-876-543210';
				} else if (selectedBank === 'wrBank') {
					accountNumber = '1002-536-829041';
				}
				$('#accountNumber').val(accountNumber);
			});
		});
	</script>
</body>
</html>